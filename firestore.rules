rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Customer & Subscription Rules (No Change) ---
    match /customers/{userId} {
      allow read, create, update: if request.auth != null && request.auth.uid == userId;
      match /checkout_sessions/{id} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
      match /subscriptions/{id} {
        allow read: if request.auth != null && request.auth.uid == userId;
      }
    }

    // --- Group Chats Rules ---
    match /groupChats/{groupId} {
      allow read, create: if request.auth != null;
      allow delete: if request.auth != null && request.auth.uid == resource.data.creatorId;
      allow update: if request.auth != null && (
        // Condition 1: Joining a group
        (
          request.resource.data.diff(resource.data).affectedKeys().hasOnly(['members']) &&
          !resource.data.members.keys().hasAny([request.auth.uid]) &&
          request.resource.data.members.keys().hasAny([request.auth.uid]) &&
          request.resource.data.members.size() <= 3
        ) ||
        // Condition 2: Leaving a group
        (
          request.resource.data.diff(resource.data).affectedKeys().hasOnly(['members']) &&
          !request.resource.data.members.keys().hasAny([request.auth.uid]) &&
          resource.data.members.keys().hasAny([request.auth.uid])
        ) ||
        // Condition 3: Updating the topic
        (
          request.auth.uid == resource.data.creatorId &&
          request.resource.data.diff(resource.data).affectedKeys().hasOnly(['topic']) &&
          request.resource.data.topic != resource.data.topic
        ) ||
        // Condition 4: Adding a message
        (
          request.auth.uid in resource.data.members &&
          request.resource.data.messages.size() == resource.data.messages.size() + 1 &&
          request.resource.data.diff(resource.data).affectedKeys().hasOnly(['messages']) &&
          (
            // EITHER the new message is from the authenticated user...
            ('senderId' in request.resource.data.messages[request.resource.data.messages.size() - 1] &&
             request.resource.data.messages[request.resource.data.messages.size() - 1].senderId == request.auth.uid) ||
            // OR the new message is from the AI.
            (request.resource.data.messages[request.resource.data.messages.size() - 1].sender == 'ai')
          )
        )
      );
    }

    // --- Public Products & Prices Rules (No Change) ---
    match /products/{id} {
      allow read: if true;
      match /prices/{id} {
        allow read: if true;
      }
    }
  }
}