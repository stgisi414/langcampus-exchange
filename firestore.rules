rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Customer & Subscription Rules ---
    match /customers/{userId} {
      allow read, create, update: if request.auth != null && request.auth.uid == userId;
      match /checkout_sessions/{id} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
      match /subscriptions/{id} {
        allow read: if request.auth != null && request.auth.uid == userId;
      }
    }

    // --- Group Chats Rules ---
    match /groupChats/{groupId} {
      allow read, create: if request.auth != null;
      allow delete: if request.auth != null && request.auth.uid == resource.data.creatorId;
      allow update: if request.auth != null && (
        // Condition 1: Joining a group
        (
          request.resource.data.members.size() == resource.data.members.size() + 1 &&
          request.auth.uid in request.resource.data.members &&
          !(request.auth.uid in resource.data.members) &&
          resource.data.members.size() < 3
        ) ||
        // Condition 2: Leaving a group
        (
          request.resource.data.members.size() == resource.data.members.size() - 1 &&
          !(request.auth.uid in request.resource.data.members) &&
          request.auth.uid in resource.data.members
        ) ||
        // Condition 3: Updating the topic (only creator)
        (
          request.auth.uid == resource.data.creatorId &&
          request.resource.data.topic != resource.data.topic
        ) ||
        // Condition 4: Adding a message (only members)
        (
          request.auth.uid in resource.data.members &&
          request.resource.data.messages.size() == resource.data.messages.size() + 1
        )
      );
    }

    // --- Public Products & Prices Rules ---
    match /products/{id} {
      allow read: if true;
      match /prices/{id} {
        allow read: if true;
      }
    }
  }
}