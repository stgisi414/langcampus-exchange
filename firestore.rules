rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Customer & Subscription Rules (No Change) ---
    match /customers/{userId} {
      allow read, create, update: if request.auth != null && request.auth.uid == userId;
      match /checkout_sessions/{id} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
      match /subscriptions/{id} {
        allow read: if request.auth != null && request.auth.uid == userId;
      }
    }

    // --- Group Chats Rules ---
    match /groupChats/{groupId} {
      allow read, create: if request.auth != null;
      // FIX: Only the creator is allowed to delete the group chat.
      allow delete: if request.auth != null && request.auth.uid == resource.data.creatorId;
      allow update: if request.auth != null && (
        // Condition 1: Joining a group (Adding a member. MUST ONLY change 'members'. Max size 3.)
        (
          request.resource.data.diff(resource.data).affectedKeys().hasOnly(['members']) &&
          !resource.data.members.keys().hasAny([request.auth.uid]) && // Was NOT a member
          request.resource.data.members.keys().hasAny([request.auth.uid]) && // Is NOW a member
          request.resource.data.members.size() <= 3
       
         ) ||
        // Condition 2: Leaving a group (Removing the current user as member. MUST ONLY change 'members'.)
        (
          request.resource.data.diff(resource.data).affectedKeys().hasOnly(['members']) &&
          !request.resource.data.members.keys().hasAny([request.auth.uid]) && // Is NO LONGER a member
          resource.data.members.keys().hasAny([request.auth.uid]) // WAS a member
        ) ||
        // Condition 3: Updating the topic (only creator, MUST ONLY change 'topic')
        (
          request.auth.uid == resource.data.creatorId &&
          request.resource.data.diff(resource.data).affectedKeys().hasOnly(['topic']) &&
          request.resource.data.topic != resource.data.topic
        ) ||
        // Condition 4: Adding a message (only members, MUST ONLY change 'messages' and size increases by 1)
        (
          request.auth.uid in resource.data.members &&
          request.resource.data.diff(resource.data).affectedKeys().hasOnly(['messages']) &&
          request.resource.data.messages.size() == resource.data.messages.size() + 1
        )
      );
    }

    // --- Public Products & Prices Rules (No Change) ---
    match /products/{id} {
      allow read: if true;
      match /prices/{id} {
        allow read: if true;
      }
    }
  }
}